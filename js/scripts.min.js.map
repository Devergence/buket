{"version":3,"sources":["jquery.modal.js"],"names":["factory","module","exports","require","window","document","jQuery","$","undefined","modals","getCurrent","length","selectCurrent","i","selected","$blocker","toggleClass","modal","el","options","remove","target","this","$body","extend","defaults","doFade","isNaN","parseInt","fadeDuration","closeExisting","isActive","close","push","is","attr","anchor","test","$elm","append","open","event","elm","showSpinner","trigger","AJAX_SEND","get","done","html","AJAX_SUCCESS","current","empty","on","CLOSE","hideSpinner","AJAX_COMPLETE","fail","AJAX_FAIL","pop","prototype","constructor","m","block","blur","setTimeout","show","fadeDelay","off","which","escapeClose","clickClose","click","e","unblock","hide","BEFORE_BLOCK","_ctx","css","blockerClass","appendTo","animate","opacity","BLOCK","now","fadeOut","bind","children","BEFORE_OPEN","showClose","closeButton","closeClass","closeText","addClass","modalClass","display","OPEN","BEFORE_CLOSE","_this","AFTER_CLOSE","spinner","spinnerHtml","preventDefault","fn"],"mappings":"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","file":"scripts.min.js","sourcesContent":["/*\n    A simple jQuery modal (http://github.com/kylefox/jquery-modal)\n    Version 0.9.1\n*/\n\n(function (factory) {\n  // Making your jQuery plugin work better with npm tools\n  // http://blog.npmjs.org/post/112712169830/making-your-jquery-plugin-work-better-with-npm\n  if(typeof module === \"object\" && typeof module.exports === \"object\") {\n    factory(require(\"jquery\"), window, document);\n  }\n  else {\n    factory(jQuery, window, document);\n  }\n}(function($, window, document, undefined) {\n\n  var modals = [],\n      getCurrent = function() {\n        return modals.length ? modals[modals.length - 1] : null;\n      },\n      selectCurrent = function() {\n        var i,\n            selected = false;\n        for (i=modals.length-1; i>=0; i--) {\n          if (modals[i].$blocker) {\n            modals[i].$blocker.toggleClass('current',!selected).toggleClass('behind',selected);\n            selected = true;\n          }\n        }\n      };\n\n  $.modal = function(el, options) {\n    var remove, target;\n    this.$body = $('body');\n    this.options = $.extend({}, $.modal.defaults, options);\n    this.options.doFade = !isNaN(parseInt(this.options.fadeDuration, 10));\n    this.$blocker = null;\n    if (this.options.closeExisting)\n      while ($.modal.isActive())\n        $.modal.close(); // Close any open modals.\n    modals.push(this);\n    if (el.is('a')) {\n      target = el.attr('href');\n      this.anchor = el;\n      //Select element by id from href\n      if (/^#/.test(target)) {\n        this.$elm = $(target);\n        if (this.$elm.length !== 1) return null;\n        this.$body.append(this.$elm);\n        this.open();\n      //AJAX\n      } else {\n        this.$elm = $('<div>');\n        this.$body.append(this.$elm);\n        remove = function(event, modal) { modal.elm.remove(); };\n        this.showSpinner();\n        el.trigger($.modal.AJAX_SEND);\n        $.get(target).done(function(html) {\n          if (!$.modal.isActive()) return;\n          el.trigger($.modal.AJAX_SUCCESS);\n          var current = getCurrent();\n          current.$elm.empty().append(html).on($.modal.CLOSE, remove);\n          current.hideSpinner();\n          current.open();\n          el.trigger($.modal.AJAX_COMPLETE);\n        }).fail(function() {\n          el.trigger($.modal.AJAX_FAIL);\n          var current = getCurrent();\n          current.hideSpinner();\n          modals.pop(); // remove expected modal from the list\n          el.trigger($.modal.AJAX_COMPLETE);\n        });\n      }\n    } else {\n      this.$elm = el;\n      this.anchor = el;\n      this.$body.append(this.$elm);\n      this.open();\n    }\n  };\n\n  $.modal.prototype = {\n    constructor: $.modal,\n\n    open: function() {\n      var m = this;\n      this.block();\n      this.anchor.blur();\n      if(this.options.doFade) {\n        setTimeout(function() {\n          m.show();\n        }, this.options.fadeDuration * this.options.fadeDelay);\n      } else {\n        this.show();\n      }\n      $(document).off('keydown.modal').on('keydown.modal', function(event) {\n        var current = getCurrent();\n        if (event.which === 27 && current.options.escapeClose) current.close();\n      });\n      if (this.options.clickClose)\n        this.$blocker.click(function(e) {\n          if (e.target === this)\n            $.modal.close();\n        });\n    },\n\n    close: function() {\n      modals.pop();\n      this.unblock();\n      this.hide();\n      if (!$.modal.isActive())\n        $(document).off('keydown.modal');\n    },\n\n    block: function() {\n      this.$elm.trigger($.modal.BEFORE_BLOCK, [this._ctx()]);\n      this.$body.css('overflow','hidden');\n      this.$blocker = $('<div class=\"' + this.options.blockerClass + ' blocker current\"></div>').appendTo(this.$body);\n      selectCurrent();\n      if(this.options.doFade) {\n        this.$blocker.css('opacity',0).animate({opacity: 1}, this.options.fadeDuration);\n      }\n      this.$elm.trigger($.modal.BLOCK, [this._ctx()]);\n    },\n\n    unblock: function(now) {\n      if (!now && this.options.doFade)\n        this.$blocker.fadeOut(this.options.fadeDuration, this.unblock.bind(this,true));\n      else {\n        this.$blocker.children().appendTo(this.$body);\n        this.$blocker.remove();\n        this.$blocker = null;\n        selectCurrent();\n        if (!$.modal.isActive())\n          this.$body.css('overflow','');\n      }\n    },\n\n    show: function() {\n      this.$elm.trigger($.modal.BEFORE_OPEN, [this._ctx()]);\n      if (this.options.showClose) {\n        this.closeButton = $('<a href=\"#close-modal\" rel=\"modal:close\" class=\"close-modal ' + this.options.closeClass + '\">' + this.options.closeText + '</a>');\n        this.$elm.append(this.closeButton);\n      }\n      this.$elm.addClass(this.options.modalClass).appendTo(this.$blocker);\n      if(this.options.doFade) {\n        this.$elm.css({opacity: 0, display: 'inline-block'}).animate({opacity: 1}, this.options.fadeDuration);\n      } else {\n        this.$elm.css('display', 'inline-block');\n      }\n      this.$elm.trigger($.modal.OPEN, [this._ctx()]);\n    },\n\n    hide: function() {\n      this.$elm.trigger($.modal.BEFORE_CLOSE, [this._ctx()]);\n      if (this.closeButton) this.closeButton.remove();\n      var _this = this;\n      if(this.options.doFade) {\n        this.$elm.fadeOut(this.options.fadeDuration, function () {\n          _this.$elm.trigger($.modal.AFTER_CLOSE, [_this._ctx()]);\n        });\n      } else {\n        this.$elm.hide(0, function () {\n          _this.$elm.trigger($.modal.AFTER_CLOSE, [_this._ctx()]);\n        });\n      }\n      this.$elm.trigger($.modal.CLOSE, [this._ctx()]);\n    },\n\n    showSpinner: function() {\n      if (!this.options.showSpinner) return;\n      this.spinner = this.spinner || $('<div class=\"' + this.options.modalClass + '-spinner\"></div>')\n        .append(this.options.spinnerHtml);\n      this.$body.append(this.spinner);\n      this.spinner.show();\n    },\n\n    hideSpinner: function() {\n      if (this.spinner) this.spinner.remove();\n    },\n\n    //Return context for custom events\n    _ctx: function() {\n      return { elm: this.$elm, $elm: this.$elm, $blocker: this.$blocker, options: this.options };\n    }\n  };\n\n  $.modal.close = function(event) {\n    if (!$.modal.isActive()) return;\n    if (event) event.preventDefault();\n    var current = getCurrent();\n    current.close();\n    return current.$elm;\n  };\n\n  // Returns if there currently is an active modal\n  $.modal.isActive = function () {\n    return modals.length > 0;\n  };\n\n  $.modal.getCurrent = getCurrent;\n\n  $.modal.defaults = {\n    closeExisting: true,\n    escapeClose: true,\n    clickClose: true,\n    closeText: 'Close',\n    closeClass: '',\n    modalClass: \"modal\",\n    blockerClass: \"jquery-modal\",\n    spinnerHtml: '<div class=\"rect1\"></div><div class=\"rect2\"></div><div class=\"rect3\"></div><div class=\"rect4\"></div>',\n    showSpinner: true,\n    showClose: true,\n    fadeDuration: null,   // Number of milliseconds the fade animation takes.\n    fadeDelay: 1.0        // Point during the overlay's fade-in that the modal begins to fade in (.5 = 50%, 1.5 = 150%, etc.)\n  };\n\n  // Event constants\n  $.modal.BEFORE_BLOCK = 'modal:before-block';\n  $.modal.BLOCK = 'modal:block';\n  $.modal.BEFORE_OPEN = 'modal:before-open';\n  $.modal.OPEN = 'modal:open';\n  $.modal.BEFORE_CLOSE = 'modal:before-close';\n  $.modal.CLOSE = 'modal:close';\n  $.modal.AFTER_CLOSE = 'modal:after-close';\n  $.modal.AJAX_SEND = 'modal:ajax:send';\n  $.modal.AJAX_SUCCESS = 'modal:ajax:success';\n  $.modal.AJAX_FAIL = 'modal:ajax:fail';\n  $.modal.AJAX_COMPLETE = 'modal:ajax:complete';\n\n  $.fn.modal = function(options){\n    if (this.length === 1) {\n      new $.modal(this, options);\n    }\n    return this;\n  };\n\n  // Automatically bind links with rel=\"modal:close\" to, well, close the modal.\n  $(document).on('click.modal', 'a[rel~=\"modal:close\"]', $.modal.close);\n  $(document).on('click.modal', 'a[rel~=\"modal:open\"]', function(event) {\n    event.preventDefault();\n    $(this).modal();\n  });\n}));\n"]}